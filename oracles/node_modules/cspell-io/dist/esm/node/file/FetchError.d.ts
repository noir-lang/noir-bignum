export declare class FetchUrlError extends Error implements NodeJS.ErrnoException {
    readonly code: string | undefined;
    readonly status: number | undefined;
    readonly url: URL;
    constructor(message: string, code: string | undefined, status: number | undefined, url: URL);
    static create(url: URL, status: number, message?: string): FetchUrlError;
    static fromError(url: URL, e: Error): FetchUrlError;
}
export declare function isNodeError(e: unknown): e is NodeJS.ErrnoException;
export declare function isError(e: unknown): e is Error;
interface ErrorWithOptionalCause extends Error {
    cause?: NodeJS.ErrnoException;
}
export declare function isErrorWithOptionalCause(e: unknown): e is ErrorWithOptionalCause;
export declare function getCause(e: unknown): NodeJS.ErrnoException | undefined;
export declare function toFetchUrlError(err: unknown, url: URL): FetchUrlError;
export declare function toError(err: unknown): Error;
export {};
//# sourceMappingURL=FetchError.d.ts.map