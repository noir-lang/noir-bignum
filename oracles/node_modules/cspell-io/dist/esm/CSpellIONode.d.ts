import { ServiceBus } from '@cspell/cspell-service-bus';
import type { CSpellIO, ReadFileOptionsOrEncoding } from './CSpellIO.js';
import type { BufferEncoding, DirEntry, FileReference, Stats, TextFileResource, UrlOrReference } from './models/index.js';
export declare class CSpellIONode implements CSpellIO {
    readonly serviceBus: ServiceBus;
    constructor(serviceBus?: ServiceBus);
    readFile(urlOrFilename: UrlOrReference, options?: ReadFileOptionsOrEncoding): Promise<TextFileResource>;
    readDirectory(urlOrFilename: string | URL): Promise<DirEntry[]>;
    readFileSync(urlOrFilename: UrlOrReference, encoding?: BufferEncoding): TextFileResource;
    writeFile(urlOrFilename: UrlOrReference, content: string | ArrayBufferView): Promise<FileReference>;
    getStat(urlOrFilename: UrlOrReference): Promise<Stats>;
    getStatSync(urlOrFilename: UrlOrReference): Stats;
    compareStats(left: Stats, right: Stats): number;
    toURL(urlOrFilename: UrlOrReference, relativeTo?: string | URL): URL;
    toFileURL(urlOrFilename: UrlOrReference, relativeTo?: string | URL): URL;
    urlBasename(urlOrFilename: UrlOrReference): string;
    urlDirname(urlOrFilename: UrlOrReference): URL;
}
export declare function getDefaultCSpellIO(): CSpellIO;
//# sourceMappingURL=CSpellIONode.d.ts.map