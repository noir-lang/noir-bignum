export declare function pathToSample(...parts: string[]): string;
export declare function pathToSampleURL(...parts: string[]): URL;
export declare function pathToRoot(...parts: string[]): string;
export declare function pathToRootURL(...parts: string[]): URL;
export declare function makePathToFile(file: string): Promise<void>;
/**
 * Make the directories to the url. If the url ends with a `/` then it is treated as a directory.
 * @param url - a URL
 * @returns void
 */
export declare function makePathToURL(url: URL): Promise<void>;
export declare function testNameToDir(testName: string): string;
/**
 * Calculate a filepath for a path to a temporary directory that will be unique to the current test.
 * Note: if a text is not currently running, then it is the path for the test file.
 * @returns full path to the requested temp file.
 */
export declare function pathToTemp(...parts: string[]): string;
/**
 * Calculate a URL for a path to a temporary directory that will be unique to the current test.
 * Note: if a text is not currently running, then it is the path for the test file.
 * @returns a URL to the requested temp file.
 */
export declare function pathToTempURL(...parts: string[]): URL;
//# sourceMappingURL=test.helper.d.ts.map