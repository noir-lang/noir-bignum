import type { BufferEncodingExt, TextEncodingExt } from './BufferEncoding.js';
export declare function decodeUtf16LE(data: ArrayBufferView): string;
export declare function decodeUtf16BE(data: ArrayBufferView): string;
export declare function decodeToString(data: ArrayBufferView, encoding?: TextEncodingExt): string;
export declare function decode(data: ArrayBufferView, encoding?: BufferEncodingExt): string;
export declare function encodeString(str: string, encoding?: BufferEncodingExt, bom?: boolean): ArrayBufferView;
export declare function encodeUtf16LE(str: string, bom?: boolean): ArrayBufferView;
export declare function encodeUtf16BE(str: string, bom?: boolean): ArrayBufferView;
export declare function calcEncodingFromBom(data: ArrayBufferView): 'utf16be' | 'utf16le' | undefined;
export declare class UnsupportedEncodingError extends Error {
    constructor(encoding: string);
}
export declare function isGZipped(data: ArrayBufferView | string): boolean;
//# sourceMappingURL=encode-decode.d.ts.map