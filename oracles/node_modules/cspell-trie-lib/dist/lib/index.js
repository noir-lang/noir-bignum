export { buildITrieFromWords } from './buildITrie.js';
export { consolidate } from './consolidate.js';
export { CASE_INSENSITIVE_PREFIX, COMPOUND_FIX, defaultTrieInfo, 
/** @deprecated */
defaultTrieInfo as defaultTrieOptions, FORBID_PREFIX, OPTIONAL_COMPOUND_FIX, } from './constants.js';
export { decodeTrie } from './decodeTrie.js';
export { createWeightedMap, editDistance, editDistanceWeighted } from './distance/index.js';
export { importTrie, serializeTrie } from './io/importExport.js';
export { mapDictionaryInformationToWeightMap } from './mappers/mapDictionaryInfoToWeightMap.js';
export { createDictionaryLineParserMapper as createDictionaryLineParser, parseDictionary, parseDictionaryLegacy, parseDictionaryLines, } from './SimpleDictionaryParser.js';
export { impersonateCollector, suggestionCollector } from './suggestCollector.js';
export { Trie } from './trie.js';
export { buildTrie, buildTrieFast, TrieBuilder } from './TrieBuilder.js';
export { countNodes, countWords, createTrieRoot, createTrieRootFromList, findNode, has, insert, isCircular, isWordTerminationNode, iterateTrie, iteratorTrieWords, orderTrie, trieNodeToRoot, walk, } from './TrieNode/trie-util.js';
export { FLAG_WORD } from './TrieNode/TrieNode.js';
export { isDefined } from './utils/isDefined.js';
export { mergeDefaults } from './utils/mergeDefaults.js';
export { mergeOptionalWithDefaults } from './utils/mergeOptionalWithDefaults.js';
export { normalizeWord, normalizeWordForCaseInsensitive, normalizeWordToLowercase } from './utils/normalizeWord.js';
export { expandCharacterSet } from './utils/text.js';
export { CompoundWordsMethod, hintedWalker, JOIN_SEPARATOR, walker, WORD_SEPARATOR } from './walker/index.js';
//# sourceMappingURL=index.js.map